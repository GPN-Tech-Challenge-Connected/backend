// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gpn;

namespace gpn.Migrations
{
    [DbContext(typeof(GPNContext))]
    [Migration("20210626173114_files")]
    partial class files
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Cyrillic_General_100_BIN")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("gpn.ArrivalOperation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("LogisticCompany")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("logisticCompany");

                    b.HasKey("Id");

                    b.ToTable("ArrivalOperation");
                });

            modelBuilder.Entity("gpn.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("gpn.Equipment", b =>
                {
                    b.Property<string>("Number")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("number");

                    b.Property<int?>("ComapnyId")
                        .HasColumnType("int")
                        .HasColumnName("comapnyID");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("ParentId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("parentID");

                    b.Property<string>("State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("state");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("type");

                    b.HasKey("Number")
                        .HasName("PK__Equipmen__FD291E4095624219");

                    b.HasIndex("ComapnyId");

                    b.HasIndex("ParentId");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("gpn.FileMetadata", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("gpn.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<string>("DocId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("equipmentNumber");

                    b.Property<int?>("FileID")
                        .HasColumnType("int")
                        .HasColumnName("fileId");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("Performer")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("performer");

                    b.Property<long?>("PostponedTime")
                        .HasColumnType("bigint")
                        .HasColumnName("postponedTime");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("typeId");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentNumber");

                    b.HasIndex("FileID");

                    b.HasIndex("TypeId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("gpn.OperationDeadline", b =>
                {
                    b.Property<string>("EquipmentNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("equipmentNumber");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("typeID");

                    b.Property<int?>("OperationId")
                        .HasColumnType("int")
                        .HasColumnName("operationID");

                    b.HasKey("EquipmentNumber", "TypeId")
                        .HasName("PK__Operatio__9EF368CB25B1225D");

                    b.HasIndex("OperationId");

                    b.HasIndex("TypeId");

                    b.ToTable("OperationDeadlines");
                });

            modelBuilder.Entity("gpn.OpertationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("OpertationTypes");
                });

            modelBuilder.Entity("gpn.SlaRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Duration")
                        .HasColumnType("bigint")
                        .HasColumnName("duration");

                    b.Property<int?>("NextTypeId")
                        .HasColumnType("int")
                        .HasColumnName("nextTypeID");

                    b.Property<string>("OptionType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("optionType");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("typeID");

                    b.HasKey("Id");

                    b.HasIndex("NextTypeId");

                    b.HasIndex("TypeId");

                    b.ToTable("SlaRules");
                });

            modelBuilder.Entity("gpn.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ComapnyId")
                        .HasColumnType("int")
                        .HasColumnName("comapnyID");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.HasIndex("ComapnyId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("gpn.ArrivalOperation", b =>
                {
                    b.HasOne("gpn.Operation", "IdNavigation")
                        .WithOne("ArrivalOperation")
                        .HasForeignKey("gpn.ArrivalOperation", "Id")
                        .HasConstraintName("FK__ArrivalOpera__id__4AB81AF0")
                        .IsRequired();

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("gpn.Equipment", b =>
                {
                    b.HasOne("gpn.Company", "Comapny")
                        .WithMany("Equipment")
                        .HasForeignKey("ComapnyId")
                        .HasConstraintName("FK__Equipment__comap__440B1D61");

                    b.HasOne("gpn.Equipment", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK__Equipment__paren__44FF419A");

                    b.Navigation("Comapny");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("gpn.Operation", b =>
                {
                    b.HasOne("gpn.Equipment", "EquipmentNumberNavigation")
                        .WithMany("Operations")
                        .HasForeignKey("EquipmentNumber")
                        .HasConstraintName("FK__Operation__equip__48CFD27E");

                    b.HasOne("gpn.FileMetadata", "File")
                        .WithMany()
                        .HasForeignKey("FileID");

                    b.HasOne("gpn.OpertationType", "Type")
                        .WithMany("Operations")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK__Operation__typeI__49C3F6B7");

                    b.Navigation("EquipmentNumberNavigation");

                    b.Navigation("File");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("gpn.OperationDeadline", b =>
                {
                    b.HasOne("gpn.Equipment", "EquipmentNumberNavigation")
                        .WithMany("OperationDeadlines")
                        .HasForeignKey("EquipmentNumber")
                        .HasConstraintName("FK__Operation__equip__45F365D3")
                        .IsRequired();

                    b.HasOne("gpn.Operation", "Operation")
                        .WithMany("OperationDeadlines")
                        .HasForeignKey("OperationId")
                        .HasConstraintName("FK__Operation__opera__46E78A0C");

                    b.HasOne("gpn.OpertationType", "Type")
                        .WithMany("OperationDeadlines")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK__Operation__typeI__47DBAE45")
                        .IsRequired();

                    b.Navigation("EquipmentNumberNavigation");

                    b.Navigation("Operation");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("gpn.SlaRule", b =>
                {
                    b.HasOne("gpn.OpertationType", "NextType")
                        .WithMany("SlaRuleNextTypes")
                        .HasForeignKey("NextTypeId")
                        .HasConstraintName("FK__SlaRules__nextTy__4CA06362");

                    b.HasOne("gpn.OpertationType", "Type")
                        .WithMany("SlaRuleTypes")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK__SlaRules__typeID__4BAC3F29");

                    b.Navigation("NextType");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("gpn.User", b =>
                {
                    b.HasOne("gpn.Company", "Comapny")
                        .WithMany("Users")
                        .HasForeignKey("ComapnyId")
                        .HasConstraintName("FK__User__comapnyID__4D94879B");

                    b.Navigation("Comapny");
                });

            modelBuilder.Entity("gpn.Company", b =>
                {
                    b.Navigation("Equipment");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("gpn.Equipment", b =>
                {
                    b.Navigation("InverseParent");

                    b.Navigation("OperationDeadlines");

                    b.Navigation("Operations");
                });

            modelBuilder.Entity("gpn.Operation", b =>
                {
                    b.Navigation("ArrivalOperation");

                    b.Navigation("OperationDeadlines");
                });

            modelBuilder.Entity("gpn.OpertationType", b =>
                {
                    b.Navigation("OperationDeadlines");

                    b.Navigation("Operations");

                    b.Navigation("SlaRuleNextTypes");

                    b.Navigation("SlaRuleTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
